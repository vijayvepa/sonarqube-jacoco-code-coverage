buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.8"
        classpath "org.jacoco:org.jacoco.core:0.8.5"
    }
}

project.allprojects {

    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: "org.sonarqube"

    repositories {
        mavenCentral()
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    jacocoTestReport.dependsOn test
}



sonarqube {
    properties {
        property "sonar.host.url", "http://yy098809:9000"
        property "sonar.login", "0a9c5152ba956235c9303cb64bddbe1cd00e6365"
        property "sonar.projectName", project.name
        property "sonar.projectKey", project.name
        property "sonar.projectVersion", project.version
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.java.coveragePlugin", "jacoco"
        // taken from `jacoco.gradle`
        //property "sonar.coverage.exclusions", "**/test/**,**/androidTest/**,**/R.class,**/BuildConfig.*,**/Manifest*.*,**/*Test*.*,**/com/example/databinding/*,**/com/example/generated/callback/*,**/*Dto*.*,**/android/databinding/*,**/androidx/databinding/*,**/di/module/*,**/*MapperImpl*.*,**/BuildConfig.*,**/*Component*.*,**/*BR*.*,**/Manifest*.*,**/*Companion*.*,**/*Module.*,**/*Dagger*.*,**/*MembersInjector*.*,**/*Extensions*.*,**/InputMethodManagerLeaks.*,**/*_Factory*.*,**/*_Provide*Factory*.*"
    }
}

project.afterEvaluate {

    tasks.create(name: "jacocoMasterCoverage", type: JacocoReport) {
        group = "Reporting"
        description = "Generate Jacoco coverage reports for the domain build"

        reports {
            html.enabled = false
            xml.enabled = true
            csv.enabled = false
        }

        project.subprojects { subproject ->

            print "${subproject.projectDir}/src/main/java"

            def classDirs = [
                    "${subproject.buildDir}/classes/java/main"
            ]

            classDirectories.setFrom(files(classDirs))

            def coverageSourceDirs = [
                    "${subproject.projectDir}/src/main/java",
            ]

            additionalSourceDirs.setFrom(files(coverageSourceDirs))
            sourceDirectories.setFrom(files(coverageSourceDirs))

            executionData(files([
                    "${subproject.buildDir}/jacoco/test.exec"
            ]))


        }
    }

    project.subprojects.each { subproject ->
        jacocoMasterCoverage.dependsOn subproject.tasks.test.path
        jacocoMasterCoverage.dependsOn subproject.tasks.jacocoTestReport.path
    }

    tasks.sonarqube.dependsOn jacocoMasterCoverage
}


